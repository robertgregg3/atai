name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '**'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.12.0'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Run Vitest tests
        run: npm run test:ci

  notify:
    runs-on: ubuntu-latest
    needs: test  # This ensures that the notification job depends on the 'test' job
    if: always()  # This ensures the notification runs regardless of success or failure
    steps:
      - name: Notify Slack on Success or Failure
        run: |
          if [[ "${{ needs.test.result }}" == "success" ]]; then
            curl -X POST -H 'Content-type: application/json' \
            --data '{"text":"✅ CI Pipeline succeeded for *${{ github.event.repository.full_name }}*\n> Commit: ${{ github.event.head_commit.url }}"}' \
            ${{ secrets.SLACK_WEBHOOK_URL }}
          elif [[ "${{ needs.test.result }}" == "failure" ]]; then
            curl -X POST -H 'Content-type: application/json' \
            --data '{"text":"❌ CI Pipeline failed for *${{ github.event.repository.full_name }}*\n> Commit: ${{ github.event.head_commit.url }}"}' \
            ${{ secrets.SLACK_WEBHOOK_URL }}
          else
            echo "Unexpected status: ${{ needs.test.result }}"
          fi